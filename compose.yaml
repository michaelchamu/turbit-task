services:
  mongodb:
    image: mongo:7.0
    container_name: mongodb_container
    restart: always
    ports:
      - "27017:27017"
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - mongodb_network

  mongo-express:
    image: mongo-express:1.0.2
    container_name: mongo_express_container
    restart: always
    ports:
      - "8081:8081"
    env_file:
      - .env
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/
      ME_CONFIG_BASICAUTH: "false"
    depends_on:
      - mongodb
    networks:
      - mongodb_network

  task1-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: task1
    container_name: turbit-task1
    restart: always
    ports:
      - "6000:6000"
    env_file:
      - .env
    depends_on:
      - mongodb
    networks:
      - mongodb_network

  task2-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: task2
    container_name: turbit-task2
    restart: always
    ports:
      - "7000:7000"
    env_file:
      - .env
    depends_on:
      - mongodb
    networks:
      - mongodb_network

volumes:
  mongodb_data:
    driver: local

networks:
  mongodb_network:
    driver: bridge
